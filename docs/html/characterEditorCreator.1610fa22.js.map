{"mappings":"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","sources":["src/scripts/bscript.js"],"sourcesContent":["//import 'regenerator-runtime/runtime'\r\n\r\n//make difference between edit and create\r\nlet submitMethod;\r\nlet prefixId;\r\nlet characterId = localStorage[\"stored\"];\r\n\r\nif (characterId == 0) {\r\n    submitMethod = \"POST\"\r\n    prefixId = \"\"\r\n}\r\nelse {\r\n    submitMethod = \"PUT\"\r\n    prefixId = \"/\" + characterId\r\n}\r\n\r\n//load img and return url to send\r\nconst inputFile = document.getElementById('inputfile')\r\nconst displayImgb = document.querySelector('#displayImg')\r\nlet fileURL;\r\nlet fileURLtoSend;\r\n\r\ndocument.getElementById('modifImg').addEventListener('click', ()=>{\r\n    inputFile.click()\r\n})\r\n\r\ninputFile.addEventListener('change', () => {\r\n    let reader = new FileReader() \r\n  reader.readAsDataURL(inputFile.files[0])\r\n  reader.onload = () => {      \r\n    fileURLtoSend = reader.result.split(',')[1];\r\n    fileURL = reader.result\r\n    console.log(fileURL)\r\n    let imgTag = `<img scr=${fileURL} alt=\"\">`\r\n    displayImgb.src = fileURL\r\n    return fileURLtoSend\r\n}\r\n})\r\n\r\n//display the Markdown editor\r\n//Initialization of the markdown editor and customization of it toolbar\r\nconst easyMDE = new EasyMDE({element: document.querySelector('.inputLongDescription'),\r\ntoolbar: [\"bold\", \"italic\", \"heading\", \"|\", \"quote\", \"strikethrough\",\r\n    \"heading-smaller\",\"heading-bigger\", \"code\",\"quote\",\"unordered-list\",\"ordered-list\",\"link\",\"|\",\"clean-block\",\"preview\"]});\r\n    \r\n//script to display content to edit a character (for characterEditorCreator)\r\nlet editCharacters = async() => {\r\n    try {\r\n    let response = await fetch(\"https://character-database.becode.xyz/characters\"+prefixId);\r\n    let character = await response.json();\r\n    \r\n    //display content when editing and nothing for creating new character\r\n    if (characterId==0) {\r\n    //let singleImgField = document.querySelector('.singleImg').src = null;\r\n    let inputNameField = document.querySelector('.inputName').value = null;\r\n    let inputShortDescriptionField = document.querySelector('.inputShortDescription').value = null;\r\n    let inputLongDescriptionField = document.querySelector('.inputLongDescription').value = null;\r\n    }\r\n    else {\r\n    let singleImgField = document.querySelector('#displayImg').src = \"data:image/png;base64,\" + character.image;\r\n    let inputNameField = document.querySelector('.inputName').value = character.name;\r\n    let inputShortDescriptionField = document.querySelector('.inputShortDescription').value = character.shortDescription;\r\n    let inputLongDescriptionField = document.querySelector('.inputLongDescription').value = character.description;\r\n    let htmlToMkd = new showdown.Converter()\r\n    let mkdDescription = htmlToMkd.makeMarkdown(character.description)\r\n    easyMDE.value(mkdDescription)\r\n    localStorage[\"img\"] = character.image\r\n    }\r\n    } catch(err) {console.error(\"error occured during fetching character\" + err)}\r\n}\r\neditCharacters()\r\n\r\n\r\n\r\n//send edited character to api\r\nconst saveCharacters = async () => {\r\n    \r\n    //get value from markdown editor\r\n    let mkdDescription = easyMDE.value()\r\n    let mkdToHtml = new showdown.Converter()\r\n    let htmlDescription = mkdToHtml.makeHtml(mkdDescription)\r\n\r\n    //Object to put/post\r\n    let characterToPut = new Object\r\n    if (fileURLtoSend==undefined) {\r\n        characterToPut.image= localStorage[\"img\"]\r\n    }\r\n    else {\r\n    characterToPut.image = fileURLtoSend\r\n    }\r\n    characterToPut.name = document.querySelector('.inputName').value\r\n    characterToPut.description = htmlDescription\r\n    characterToPut.shortDescription = document.querySelector('.inputShortDescription').value\r\n\r\n    //do not post/put with an empty field\r\n    if ((characterToPut.image==null) || (characterToPut.image==undefined)|| (characterToPut.image=='') || (characterToPut.name==null) || (characterToPut.name==undefined) || (characterToPut.name=='') || (characterToPut.description==null) || (characterToPut.description==undefined)|| (characterToPut.description=='') || (characterToPut.shortDescription==null) || (characterToPut.shortDescription==undefined) || (characterToPut.shortDescription=='')){\r\n        //Alert(\"You have to fill all available fields, including adding a picture\") //replace with sweet alert\r\n        Swal.fire({\r\n            position: 'center',\r\n            icon: 'warning',\r\n            title: 'You have to fill all available fields, including adding a picture',\r\n            showConfirmButton: true,\r\n            \r\n          })\r\n    }\r\n    else {\r\ntry {\r\n    await fetch(\"https://character-database.becode.xyz/characters\"+ prefixId,\r\n    {\r\n        method : submitMethod,\r\n        body : JSON.stringify(characterToPut),\r\n        headers: {\"Content-type\": \"application/json; charset=UTF-8\"}\r\n    })\r\n} catch (err) {console.log(\"error occured during saving\" + err)}\r\n    //Swal.fire(\"saved\") //replace with sweet alert with duration 2000ms\r\n    Swal.fire({\r\n        position: 'center',\r\n        icon: 'success',\r\n        title: 'Your changes has been saved',\r\n        showConfirmButton: false,\r\n        timer: 2000,\r\n        \r\n      })\r\n      .then(()=>window.location.href = '../index.html')\r\n}\r\n}\r\nconst submitButton = document.querySelector('#saveModifications');\r\nsubmitButton.addEventListener('click',saveCharacters);\r\n\r\ndocument.getElementById('abort').addEventListener('click', ()=>{\r\n    //let abort = window.confirm(\"Continue? Your modifications will not be saved!\\nThis will redirect you to the main page\");\r\n    Swal.fire({\r\n        position: 'center',\r\n        icon: 'question',\r\n        title: 'Abort changes',\r\n        html: 'Your changes will not be saved!<br/>This will redirect you to the main page',\r\n        \r\n        showDenyButton: true,\r\n        confirmButtonText: 'Yes, continue',\r\n        denyButtonText: `No, Don't continue`,\r\n                \r\n      })\r\n      .then((result)=>{\r\n            if (result.isConfirmed){window.location.href = '../index.html'}\r\n        })\r\n\r\n    /* if (abort==true) {\r\n        window.location.href = '../index.html'\r\n    }\r\n    else {} */\r\n})\r\n\r\n\r\n\r\n"],"names":["submitMethod","prefixId","characterId","localStorage","inputFile","document","getElementById","displayImgb","querySelector","fileURL","fileURLtoSend","addEventListener","click","reader","FileReader","readAsDataURL","files","onload","result","split","console","log","src","easyMDE","EasyMDE","element","toolbar","editCharacters","async","response","fetch","character","json","value","image","name","shortDescription","description","mkdDescription","showdown","Converter","makeMarkdown","err","error","saveCharacters","htmlDescription","makeHtml","characterToPut","Object","undefined","Swal","fire","position","icon","title","showConfirmButton","method","body","JSON","stringify","headers","timer","then","window","location","href","submitButton","html","showDenyButton","confirmButtonText","denyButtonText","isConfirmed"],"version":3,"file":"characterEditorCreator.1610fa22.js.map"}