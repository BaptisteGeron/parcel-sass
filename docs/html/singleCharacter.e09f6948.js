let submitMethod,prefixId,characterId=localStorage.stored;0==characterId?(submitMethod="POST",prefixId=""):(submitMethod="PUT",prefixId="/"+characterId);let characters=async()=>{if(0!=characterId)try{let e=await fetch("https://character-database.becode.xyz/characters"+prefixId),t=await e.json();document.querySelector(".singleImg").src="data:image/png;base64,"+t.image,document.querySelector(".singleCharacterName").innerHTML=t.name,document.querySelector(".singleShortDescription").innerHTML=t.shortDescription,document.querySelector(".singleLongDescription").innerHTML=t.description}catch(e){console.error("error occured during fetching or displayng character: "+e)}};characters();let characterslist,btnDelete=document.querySelector("#delete-Charcter"),btnNext=document.querySelector("#next-Charcter"),btnPrevious=document.querySelector("#previous-Charcter"),singleImg=document.querySelector(".singleImg");var actualCharacter=0;let lastCharacter=0,firstCharacter=0,catchCurrentIndex=async()=>{let e=await fetch("https://character-database.becode.xyz/characters"),t=await e.json();t.forEach((e=>{e.id===characterId&&(actualCharacter=t.indexOf(e))}))};catchCurrentIndex();let functLastCharacter=async()=>{try{let e=await fetch("https://character-database.becode.xyz/characters");characterslist=await e.json(),lastCharacter=characterslist.length-1}catch(e){Swal.showValidationMessage(`Request failed: ${e}`)}};functLastCharacter();const funcNextCharact=()=>{(actualCharacter+=1)>lastCharacter?(actualCharacter=lastCharacter,Swal.fire("This is the last character","","info")):(characterId=characterslist[actualCharacter].id,localStorage.stored=characterslist[actualCharacter].id,document.querySelector(".singleImg").src="data:image/png;base64,"+characterslist[actualCharacter].image,document.querySelector(".singleCharacterName").innerHTML=characterslist[actualCharacter].name,document.querySelector(".singleShortDescription").innerHTML=characterslist[actualCharacter].shortDescription,document.querySelector(".singleLongDescription").innerHTML=characterslist[actualCharacter].description)};btnNext.addEventListener("click",(()=>{funcNextCharact()})),btnPrevious.addEventListener("click",(()=>{(actualCharacter-=1)<0?(actualCharacter=0,Swal.fire("This is the first character","","info")):(characterId=characterslist[actualCharacter].id,localStorage.stored=characterslist[actualCharacter].id,document.querySelector(".singleImg").src="data:image/png;base64,"+characterslist[actualCharacter].image,document.querySelector(".singleCharacterName").innerHTML=characterslist[actualCharacter].name,document.querySelector(".singleShortDescription").innerHTML=characterslist[actualCharacter].shortDescription,document.querySelector(".singleLongDescription").innerHTML=characterslist[actualCharacter].description)})),btnDelete.addEventListener("click",(async()=>{Swal.fire({icon:"question",title:"Deleting a character",text:"Do you really want to delete this character ?",footer:"Warning : This action is irreversible",backdrop:!0,showDenyButton:!0,confirmButtonText:"Yes, I want to delete",denyButtonText:"No, Don't delete",imageUrl:singleImg.src,preConfirm:async()=>response=await fetch(`https://character-database.becode.xyz/characters/${characterId}`,{method:"DELETE",headers:{"Content-type":"application/json; charset=UTF-8"}}).then((e=>{if(!e.ok)throw new Error(e.statusText);return e.json()})).catch((e=>{Swal.showValidationMessage(`Request failed: ${e}`)})),allowOutsideClick:()=>!Swal.isLoading()}).then((e=>{e.isConfirmed?(Swal.fire("The character has been deleted!","","success"),functLastCharacter(),funcNextCharact()):e.isDenied&&Swal.fire("The character is not deleted","","info")}))}));
//# sourceMappingURL=singleCharacter.e09f6948.js.map
