{"mappings":"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","sources":["src/scripts/cscript.js"],"sourcesContent":["//Look for the id of the character to display\r\nlet submitMethod;\r\nlet prefixId;\r\nlet characterId = localStorage[\"stored\"];\r\n\r\nif (characterId == 0) {\r\n    submitMethod = \"POST\"\r\n    prefixId = \"\"\r\n}\r\nelse {\r\n    submitMethod = \"PUT\"\r\n    prefixId = \"/\" + characterId\r\n}\r\n\r\n//display a character (script for singleCharacter.html)\r\nlet characters = async() => {\r\n    if (characterId != 0) {\r\n        try{\r\n    let response = await fetch(\"https://character-database.becode.xyz/characters\"+prefixId);\r\n    let character = await response.json();\r\n        \r\n    let singleImgField = document.querySelector('.singleImg').src = \"data:image/png;base64,\" + character.image;\r\n    let singleCharacterNameField = document.querySelector('.singleCharacterName').innerHTML = character.name;\r\n    let singleShortDescriptionField = document.querySelector('.singleShortDescription').innerHTML = character.shortDescription;\r\n   let singleLongDescriptionField = document.querySelector('.singleLongDescription').innerHTML = character.description;\r\n        }catch(err){console.error(\"error occured during fetching or displayng character: \"+ err)}\r\n    }\r\n    else {}\r\n}\r\ncharacters()\r\n\r\n//SweetAlert, Next and previous button-----------------------------------------\r\n\r\nlet btnDelete = document.querySelector(\"#delete-Charcter\")\r\nlet btnNext = document.querySelector(\"#next-Charcter\")\r\nlet btnPrevious = document.querySelector(\"#previous-Charcter\")\r\nlet singleImg = document.querySelector(\".singleImg\")\r\n\r\nlet characterslist\r\nvar actualCharacter=0;\r\nlet lastCharacter=0;\r\nlet firstCharacter=0;\r\n\r\nlet catchCurrentIndex = async() => { //Catch index of the current character when the page is loaded or reloaded\r\n\r\n    let res = await fetch(\"https://character-database.becode.xyz/characters\");\r\n    let charact = await res.json();\r\n\r\n    charact.forEach(el => {\r\n        if (el.id === characterId){\r\n            actualCharacter = charact.indexOf(el)\r\n        }\r\n    });\r\n}\r\ncatchCurrentIndex()\r\n\r\nlet functLastCharacter = async() => { //function to get the index of last character\r\n    try {\r\n        let response = await fetch(\"https://character-database.becode.xyz/characters\");\r\n        characterslist = await response.json();\r\n        lastCharacter = characterslist.length-1\r\n        \r\n    } catch (error) {\r\n        Swal.showValidationMessage(\r\n            `Request failed: ${error}`\r\n          )\r\n    }\r\n\r\n\r\n}\r\nfunctLastCharacter()\r\n\r\n//Next and previous character----------------------------------------------------------------\r\n\r\n\r\nconst funcNextCharact = ()=>{ // Next character function------------------------------------------\r\n    actualCharacter += 1\r\n\r\n    if (actualCharacter > lastCharacter){\r\n        actualCharacter=lastCharacter\r\n        Swal.fire(\"This is the last character\",\"\",\"info\")\r\n    }else{\r\n        characterId = characterslist[actualCharacter].id;\r\n        localStorage[\"stored\"] = characterslist[actualCharacter].id; //Updating the value of local storage\r\n\r\n        document.querySelector('.singleImg').src = \"data:image/png;base64,\" + characterslist[actualCharacter].image;\r\n        document.querySelector('.singleCharacterName').innerHTML = characterslist[actualCharacter].name;\r\n        document.querySelector('.singleShortDescription').innerHTML = characterslist[actualCharacter].shortDescription;\r\n        document.querySelector('.singleLongDescription').innerHTML = characterslist[actualCharacter].description;\r\n\r\n    }\r\n}\r\n\r\nbtnNext.addEventListener(\"click\",()=>{ //On click go to the Next character------------------\r\n    funcNextCharact()\r\n})\r\n\r\nbtnPrevious.addEventListener(\"click\",()=>{ //Go to the Previous character------------------\r\n\r\n    actualCharacter -= 1\r\n\r\n    if (actualCharacter < 0){\r\n        actualCharacter=0\r\n        Swal.fire(\"This is the first character\",\"\",\"info\")\r\n    }else{\r\n        characterId = characterslist[actualCharacter].id;\r\n        localStorage[\"stored\"] = characterslist[actualCharacter].id; //Updating the value of local storage\r\n\r\n        document.querySelector('.singleImg').src = \"data:image/png;base64,\" + characterslist[actualCharacter].image;\r\n        document.querySelector('.singleCharacterName').innerHTML = characterslist[actualCharacter].name;\r\n        document.querySelector('.singleShortDescription').innerHTML = characterslist[actualCharacter].shortDescription;\r\n        document.querySelector('.singleLongDescription').innerHTML = characterslist[actualCharacter].description;\r\n\r\n    }\r\n})\r\n\r\n\r\n\r\n//Delete character-------------------------------------------------------\r\n\r\nbtnDelete.addEventListener(\"click\",async()=>{\r\n\r\n    Swal.fire({\r\n        icon: 'question',\r\n        title: 'Deleting a character',\r\n        text: 'Do you really want to delete this character ?',\r\n        footer: 'Warning : This action is irreversible',\r\n        backdrop: true,\r\n        showDenyButton: true,\r\n        confirmButtonText: 'Yes, I want to delete',\r\n        denyButtonText: `No, Don't delete`,\r\n        imageUrl: singleImg.src,\r\n        \r\n        preConfirm: async () => {\r\n            \r\n            return response = await fetch(`https://character-database.becode.xyz/characters/${characterId}`,\r\n                {\r\n                    method : \"DELETE\",\r\n                    headers: {\"Content-type\": \"application/json; charset=UTF-8\"}\r\n                }\r\n            )\r\n              .then(response => {\r\n                if (!response.ok) {\r\n                  throw new Error(response.statusText)\r\n                }\r\n                return response.json()\r\n              })\r\n              .catch(error => {\r\n                Swal.showValidationMessage(\r\n                  `Request failed: ${error}`\r\n                )\r\n              })\r\n          },\r\n          allowOutsideClick: () => !Swal.isLoading()\r\n\r\n      })\r\n      .then((result)=>{\r\n        if (result.isConfirmed) {\r\n            Swal.fire('The character has been deleted!', '', 'success')\r\n            functLastCharacter()\r\n            funcNextCharact()\r\n\r\n          } else if (result.isDenied) {\r\n            Swal.fire('The character is not deleted', '', 'info')\r\n          }\r\n      })\r\n})"],"names":["submitMethod","prefixId","characterId","localStorage","characters","async","response","fetch","character","json","document","querySelector","src","image","innerHTML","name","shortDescription","description","err","console","error","characterslist","btnDelete","btnNext","btnPrevious","singleImg","actualCharacter","lastCharacter","firstCharacter","catchCurrentIndex","res","charact","forEach","el","id","indexOf","functLastCharacter","length","Swal","showValidationMessage","funcNextCharact","fire","addEventListener","icon","title","text","footer","backdrop","showDenyButton","confirmButtonText","denyButtonText","imageUrl","preConfirm","method","headers","then","ok","Error","statusText","catch","allowOutsideClick","isLoading","result","isConfirmed","isDenied"],"version":3,"file":"singleCharacter.e09f6948.js.map"}